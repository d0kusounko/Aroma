//===========================================================================
//!
//!	@file		Render.h
//!	@brief		描画システム.
//!
//!	@author		Copyright (C) DebugCurry. All rights reserved.
//!	@author		d0
//!
//===========================================================================
#pragma once

#include "MemoryAllocator.h"

namespace aroma {
namespace render {

//---------------------------------------------------------------------------
//! @brief		デバッグモード定義.
//---------------------------------------------------------------------------
enum class DebugMode
{
	kDisable,	//!< 無効.
	kEnable,	//!< 有効.
};

//---------------------------------------------------------------------------
//! @brief		構成設定.
//---------------------------------------------------------------------------
struct Desc
{
	DebugMode			debugMode;	//!< デバッグモード.
	MemoryAllocatorDesc	allocator;	//!< メモリアロケーター.
	//-------------------------------------------------------------------
	Desc(){ Clear(); }
	void Clear()
	{
		debugMode = DebugMode::kDisable;
		allocator.Clear();
	}
};

//---------------------------------------------------------------------------
//! @brief		描画システム初期化.
//---------------------------------------------------------------------------
void Initialize( const Desc& desc );

//---------------------------------------------------------------------------
//! @brief		描画システム終了.
//---------------------------------------------------------------------------
void Finalize();

//---------------------------------------------------------------------------
//! @brief		デバッグモードの取得.
//---------------------------------------------------------------------------
DebugMode GetDebugMode();

} // namespace render
} // namespace aroma